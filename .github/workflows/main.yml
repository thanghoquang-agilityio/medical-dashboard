name: Notify Vercel Server

on:
  workflow_dispatch:
  deployment_status:

jobs:
  notify_vercel:
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Log deployment status
        run: |
          echo "Deployment status: ${{ github.event.deployment_status.state }}"

      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Get Deployment Info
        id: deployment_info
        run: |
          # Get the deployment_id from the event
          echo "Deployment ID: ${{ github.event.deployment.id }}"
          deployment_id=${{ github.event.deployment.id }}

          # Fetch the deployment details
          deployment_response=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_GITHUB }}" \
            "https://api.github.com/repos/${{ github.repository }}/deployments/${deployment_id}")

          # Extract the commit SHA
          commit_sha=$(echo "$deployment_response" | jq -r '.sha')
          environment=$(echo "$deployment_response" | jq -r '.environment')
          echo "Commit SHA: $commit_sha"

          # Fetch commit information
          commit_response=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_GITHUB }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${commit_sha}")

          # Extract branch name and commit message
          GITHUB_REF="refs/heads/main"
          branch_name=${GITHUB_REF#refs/heads/}
          commit_message=$(echo "$commit_response" | jq -r '.commit.message')
          commit_date=$(echo "$commit_response" | jq -r '.commit.author.date')

          echo "Branch Name : $branch_name"
          echo "Commit Message: $commit_message"
          echo "Commit Date: $commit_date"

          # Set outputs for further use
          echo "::set-output name=branch_name::$branch_name"
          echo "::set-output name=commit_message::$commit_message"
          echo "::set-output name=commit_date::$commit_date"
          echo "::set-output name=environment::$environment"

      - name: Display Branch and Commit Info
        run: |
          echo "Branch Name: ${{ steps.deployment_info.outputs.branch_name }}"
          echo "Commit Message: ${{ steps.deployment_info.outputs.commit_message }}"
          echo "Commit Date: ${{ steps.deployment_info.outputs.commit_date }}"
          echo "Environment: ${{ steps.deployment_info.outputs.environment }}"

      - name: Call Vercel-deployed Node.js API
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_API_URL }}/vercel-deploy-hook \
          -H "Content-Type: application/json" \
          -d '{
                "name": "${{ secrets.PROJECT_NAME }}",
                "target": "${{ steps.deployment_info.outputs.environment }}",
                "status": "${{ github.event.deployment_status.state }}",
                "gitSource": {
                  "ref": "${{ steps.deployment_info.outputs.environment }}",
                  "message": "${{ steps.deployment_info.outputs.commit_message }}"
                },
                "createdAt": "${{ steps.deployment_info.outputs.commit_date }}"
              }
            '

  deploy-failure:
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Failure step
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_API_URL }}/vercel-deploy-hook \
          -H "Content-Type: application/json" \
          -d '{
                "name": "${{ secrets.PROJECT_NAME }}",
                "status": "${{ github.event.deployment_status.state }}"
              }
            '
